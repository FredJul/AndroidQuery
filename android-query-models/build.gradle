apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

ext {
    artifact = 'android-query-models'
    libraryName = 'AndroidQuery models'
    libraryDescription = 'AndroidQuery is an Android SQLite ORM powered an annotation preprocessor, tables are defined by Model classes and CRUD classes expose an expressive api for SQLite executing queries.'
}

android {
    compileSdkVersion 25
    buildToolsVersion "23.0.3"

    defaultConfig {
        minSdkVersion 11
        targetSdkVersion 25
        versionCode 7
        versionName libraryVersion

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [generatedFilePackageName: 'net.frju.androidquery.models.gen']
            }
        }
    }

//    signingConfigs {
//        config{
//            storeFile file(properties.getProperty("keystore.storeFile"))
//            storePassword properties.getProperty("keystore.storePassword")
//            keyAlias properties.getProperty("keystore.keyAlias")
//            keyPassword properties.getProperty("keystore.keyPassword")
//        }
//    }

//    buildTypes {
//        release {
//            signingConfig  signingConfigs.config
//            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//        }
//    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
}

dependencies {
    compile project(':android-query')
    annotationProcessor project(':android-query-preprocessor')

    androidTestAnnotationProcessor project(':android-query-preprocessor')

    androidTestCompile(
            'io.reactivex.rxjava2:rxjava:2.0.1',
            'com.android.support.test:runner:0.4',
            'com.android.support.test:rules:0.4'
    )
}

/*************** Maven & Bintray *******************/

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

version = libraryVersion
group = publishedGroupId

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = artifact
        userOrg = bintrayOrg
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        publish = true
        publicDownloadNumbers = true
    }
}

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'
                groupId publishedGroupId
                artifactId artifact
                version libraryVersion

                name libraryName
                description libraryDescription
                url siteUrl

                licenses {
                    license {
                        name licenseName
                        url licenseUrl
                    }
                }
                developers {
                    developer {
                        id developerId
                        name developerName
                        email developerEmail
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

afterEvaluate {
    javadoc.classpath += files(android.libraryVariants.collect { variant ->
        variant.javaCompile.classpath.files
    })
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}